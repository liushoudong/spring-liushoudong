Spring Bean基础
1、定义Spring Bean
什么是BeanDefinition？ --> BeanDefinition是Spring Framework中定义Bean的配置元信息接口，包含：
  Bean的类名
  Bean行为配置元素，如作用域、自动绑定的模式、生命周期回调等
  其他Bean引用，又可称作合作者（Collaborators）或者依赖（Dependencies）
  配置设置，比如Bean属性（Properties）
2、BeanDefinition元信息
  Class -- Bean全类名，必须是具体类，不能用抽象类或接口
  Name -- Bean的名称或者id
  Scope -- Bean的作用域（如：singleton单例模式、prototype原型模式等）
  Constructor arguments -- Bean构造器参数（用于依赖注入）构造器注入
  Properties -- Bean属性设置（用于依赖注入）setter注入
  Autowiring mode -- Bean自动绑定模式（如：通过名称byName）
  Lazy initialization mode -- Bean延迟初始化模式（延迟和非延迟）
  Initialization method -- Bean初始化回调方法名称
  Destruction method -- Bean销毁回调方法名称
  
  BeanDefinition构建
    通过BeanDefinitionBuilder
      builder
        genericBeanDefinition
          通过BeanDefinitionBuilder构建: BeanDefinitionBuilder beanDefinitionBuilder = BeanDefinitionBuilder.genericBeanDefinition(xx.class)
          通过属性设置: beanDefinitionBuilder.addPropertyValue("name", "value").addPropertyValue()......;
          获取BeanDefinition实例: BeanDefinition beanDefinition = beanDefinitionBuilder.getBeanDefinition(); BeanDefinition并非Bean终态，可以自定义进行修改
        rootBeanDefinition
    通过AbstractBeanDefinition以及派生类
      GenericBeanDefinition genericBeanDefinition = new GenericBeanDefinition();
      设置Bean类型 genericBeanDefinition.setBeanClass(xx.class);
      通过MutablePropertyValues批量操作属性: 
        MutablePropertyValues propertyValues = new MutablePropertyValues();
        propertyValues.addPropertyValue("name", "value"); 或者propertyValues.add("name", "value").add()......
        genericBeanDefinition.setPropertyValues(propertyValues);
  
